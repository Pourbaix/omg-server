name: Backend tests CI

on:
    push:
        branches: [ci]
    pull_request:
        branches: [ci]

# env:
#     CI: true

jobs:
    run-backend-tests:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [16.17.0]
        steps:
            - uses: actions/checkout@v3

            - name: create env file
              run: |
                  touch .env
                  echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
                  echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
                  echo DB_DATABASE=${{ secrets.DB_DATABASE }} >> .env
                  echo DB_PORT=${{ secrets.DB_PORT }} >> .env
                  echo TEST_DB_USERNAME=${{ secrets.TEST_DB_USERNAME }} >> .env
                  echo TEST_DB_PASSWORD=${{ secrets.TEST_DB_PASSWORD }} >> .env
                  echo TEST_DB_DATABASE=${{ secrets.TEST_DB_DATABASE }} >> .env
                  echo TEST_DB_PORT=${{ secrets.TEST_DB_PORT }} >> .env
                  echo DB_ROOTPASSWORD=${{ secrets.DB_ROOTPASSWORD }} >> .env
                  echo DB_HOST=${{ secrets.DB_HOST }} >> .env
                  echo SESSION_SECRET=${{ secrets.SESSION_SECRET }} >> .env

            - name: Build db stack with docker-compose
              run: docker-compose up -d

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm set cache .npm
            - run: npm install
            - run: npm install -g sequelize-cli
            - run: npm run test
              timeout-minutes: 5
